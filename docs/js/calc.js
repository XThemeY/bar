"use strict";

document.addEventListener('DOMContentLoaded', function () {
  var sliderGuest = document.querySelector("#slider-guests");
  var sliderDrink = document.querySelector("#slider-drinks");
  var sliderHours = document.querySelector("#slider-hours");
  var inputOptions = document.querySelectorAll("#calc-form input[name=option]");
  var inputDishes = document.querySelectorAll("#calc-form input[name=dishes]");
  var inputFurniture = document.querySelectorAll("#calc-form input[name=furniture]");
  var totalPrice = document.querySelector("#totalprice");
  var totalSum = 0;
  var rangeSum = getTotalSum();
  var inputSum = 0;
  var cocktailsList = document.querySelector(".shopping-cocktails");
  renderCartItem();
  var cocktailDelBtns = document.querySelectorAll('.shopping-cocktails .delete');
  var cocktailAmountBtns = document.querySelectorAll('.shopping-cocktails .cocktail-amount');
  setTotalSum();
  inputOptions.forEach(function (input) {
    input.onchange = function () {
      if (this.checked) {
        inputSum = inputSum + parseInt(this.value);
      } else {
        inputSum = inputSum - parseInt(this.value);
      }

      setTotalSum();
    };
  });
  var prevDishes = null;
  inputDishes.forEach(function (input) {
    input.onchange = function () {
      inputSum = inputSum + parseInt(this.value);

      if (prevDishes) {
        inputSum = inputSum - parseInt(prevDishes.value);
      }

      if (this !== prevDishes) {
        prevDishes = this;
      }

      setTotalSum();
    };
  });
  var prevFurniture = null;
  inputFurniture.forEach(function (input) {
    input.onchange = function () {
      inputSum = inputSum + parseInt(this.value);

      if (prevFurniture) {
        inputSum = inputSum - parseInt(prevFurniture.value);
      }

      if (this !== prevFurniture) {
        prevFurniture = this;
      }

      setTotalSum();
    };
  });

  function sliderGuestSum() {
    return sliderGuest.dataset.cost * sliderGuest.value;
  }

  function sliderDrinkSum() {
    return sliderDrink.dataset.cost * sliderDrink.value;
  }

  function sliderHoursSum() {
    return sliderHours.dataset.cost * sliderHours.value;
  }

  sliderGuest.onchange = function () {
    rangeSum = getTotalSum();
    setTotalSum();
  };

  sliderDrink.onchange = function () {
    rangeSum = getTotalSum();
    setTotalSum();
  };

  sliderHours.onchange = function () {
    rangeSum = getTotalSum();
    setTotalSum();
  };

  function getTotalSum() {
    return sliderHoursSum() + sliderDrinkSum() + sliderGuestSum();
  }

  function setTotalSum() {
    totalSum = rangeSum + inputSum;
    totalPrice.textContent = totalSum.toString() + " руб.";
  }

  function renderCartItem() {
    for (var i = 0; i < localStorage.length; i++) {
      cocktailsList.insertAdjacentHTML('afterbegin', "<div class=\"cocktail-item\">\n\t\t\t<div class=\"cocktail-title\">".concat(localStorage.key(i), "</div>\n\t\t\t<input class=\"cocktail-amount\" type=\"number\" min=\"1\" size=\"1\" value=").concat(localStorage.getItem(localStorage.key(i)), ">\n\t\t\t<div class=\"delete\"></div>\n\t\t  </div>"));
    }
  }

  cocktailDelBtns.forEach(function (btn) {
    btn.addEventListener('click', function (e) {
      localStorage.removeItem(e.target.parentNode.querySelector(".cocktail-title").textContent);
      e.target.parentNode.remove();
    });
  });
  cocktailAmountBtns.forEach(function (input) {
    input.addEventListener('input', function (e) {
      localStorage.setItem(e.target.parentNode.querySelector(".cocktail-title").textContent, e.target.value);
    });
  });
});
//# sourceMappingURL=data:application/json;charset=utf8;base64,
